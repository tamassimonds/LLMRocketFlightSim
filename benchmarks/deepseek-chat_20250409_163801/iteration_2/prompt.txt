# Rocket Design Task

## Design Requirements

- **Target Apogee**: 3048.0 meters
- **Wind Conditions**: 5 m/s from E direction

## You are scored off the following
Distance to max apogee
Cost: Cheaper the rocket the better the score
Does it land safely (less than 5 m/s)
Does it not break
Horz distance: How far is it from the intial launch site

#Score func code shown below:
structural_failure = None  # Whether the rocket structure failed during flight
structural_failure_reward = 0

if structural_failure is not None:
    if structural_failure:
        structural_failure_reward = 0
    else:
        # Structural failure did not occur
        structural_failure_reward = 1

# Calculate horizontal distance reward
# Lower horizontal distance from launch site is better
horz_distance = abs(horizontal_distance)  # Distance in meters from launch site
max_horz_distance = target_apogee * 0.3  # Maximum acceptable horizontal distance
horz_distance_reward = max(0, 1 - horz_distance / max_horz_distance)

# Calculate cost reward
# Lower cost designs receive higher rewards
cost = total_cost  # Total cost of rocket components
max_cost = 1000  # Maximum cost threshold
cost_reward = max(0, 1 - cost / max_cost)

# Calculate landing impact velocity reward
# Lower impact velocity (safer landing) is better
impact_velocity = abs(impact_velocity)  # Landing speed in m/s
max_impact_velocity = 50  # Maximum acceptable impact velocity
impact_reward = max(0, 1 - impact_velocity / max_impact_velocity)

percent_difference = abs(apogee - target_apogee) / target_apogee
distance_reward = 1.0 - percent_difference
distance_reward = max(0, distance_reward)


# Calculate total reward with component weights
reward = distance_reward + horz_distance_reward * 0.2 + cost_reward * 0.3 + impact_reward * 0.3 + structural_failure_reward * 0.2




## Available Materials

The following materials are available for the rocket components:
aluminum, composite, fiberglass, carbon_fiber, balsa_wood, plywood, ABS_plastic

## Available Motors

Name,Manufacturer,Radius (mm),Length (mm),Dry Mass (kg),Max Thrust (N),Avg Thrust (N),Burn Time (s),Total Impulse (Ns),Isp (s)
Pro75M1670,CTI,75,757,1.815,2200,1533.9,3.9,6023.6,198
AeroTechK700W,AT,54,568,0.732,1029.3,658.7,3.5,2249,177.5
CesaroniM1670,CTI,75,757,3.101,2200,1533.9,3.6,6023.6,198
AeroTechH128W,AT,29,194,0.108,190.5,141.2,1.29,176.5,191.3
CesaroniO3700,CTI,161,957,14.194,4030.3,2836.9,8.2,29930.2,177.8
CesaroniO5800,CTI,150,754,12.418,6395.5,5040.2,5.2,30382.7,222
CesaroniK160,CTI,54,404,0.7,272.2,190.2,9.7,1521.7,182.9

## Design Task

Based on the requirements and available components, design a rocket that will reach the target apogee. Your design should include:

1. Motor selection (choose from the available motors list)
2. Body dimensions and material
3. Nose cone dimensions and material
4. Fin design and material
5. Parachute specifications
6. Launch rail configuration


### Notes
DRC are run on the design so you need to make sure the design is feasible.
Here are some of the checks:
Notes for the tail the top and bottom radius cannot be the same (causes error)
The material must be specified exactly as listed above
The body radius must be greater than the motor radius
Nose cone but by exactly one of the listed 
Don't include any additional python code (other than config. Putting calculation in there is ok like 32/4 but not whole functions

## Response Format

Please provide your design as a Python dictionary that can be directly used in our simulation software. Use the following format:

```python
config = {
    "motor_choice": "MOTOR_NAME",  # Choose from available motors
    "rocket_body": {
        "radius": RADIUS_IN_METERS,  # Body radius in meters (must be greater than motor Radius)
        "length": LENGTH_IN_METERS,  # Body length in meters
        "material": "MATERIAL",  # Choose from available materials
        "thickness": THICKNESS_IN_METERS,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "SHAPE",  # "conical", "ogive", "elliptical", "tangent", "von karman", "parabolic", "powerseries" or "lvhaack".
            "length": LENGTH_IN_METERS,
            "material": "MATERIAL",
        },
        "fins": {
            "number": NUMBER_OF_FINS,
            "root_chord": LENGTH_IN_METERS,
            "tip_chord": LENGTH_IN_METERS,
            "span": LENGTH_IN_METERS,
            "cant_angle": ANGLE_IN_DEGREES,
            "material": "MATERIAL",
            "thickness": THICKNESS_IN_METERS,
        },
        "tail": {
            "length": LENGTH_IN_METERS,
            "top_radius": RADIUS_IN_METERS,
            "bottom_radius": RADIUS_IN_METERS,
            "material": "MATERIAL",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": LENGTH_IN_METERS, 
        "inclination": ANGLE_IN_DEGREES, #90 is vertical launch
        "heading": ANGLE_IN_DEGREES, # Heading in degrees 0 is up
    },
    "payload": { #point mass as position specified 
        "mass": MASS_IN_KG,
        "position": POSITION_IN_METERS,  # relative to rocket center
    },
}
```


Here's an example valid design. This is not at all indicative of what you should do just an example:

```python
config = {
    "motor_choice": "CesaroniO5800",
    "rocket_body": {
        "radius": 0.1,  # Body radius in meters
        "length": 1.2,    # Body length in meters
        "material": "fiberglass",
        "thickness": 0.01,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.3,  # Nose cone length in meters
            "material": "composite",
        },
        "fins": {
            "number": 4,
            "root_chord": 0.15,  # Fin root chord in meters
            "tip_chord": 0.075,  # Fin tip chord in meters
            "span": 0.3,         # Fin span in meters
            "cant_angle": 0.5,   # Cant angle in degrees
            "material": "carbon_fiber",
            "thickness": 0.005   # Fin thickness in meters
        },
        "tail": {
            "length": 1.2,  # Tail length in meters
            "top_radius": 0.04,  # Top radius in meters
            "bottom_radius": 0.05,  # Bottom radius in meters
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.25,  # Main parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,  # Drogue parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 1.2,  # Length of the launch rail in meters
        "inclination": 90,   # Rail inclination in degrees (vertical)
        "heading": 0,        # Launch heading in degrees (straight up)
    },
    "payload": {
        "mass": 0.5,  # Payload mass in kg
        "position": 0.6  # Payload position relative to rocket center in meters
    }
}
```
Before answering you should provide your full reasoning for the design choices you made thinking like a rocket scientist. Run sample calulations, make approximations etc to find best design



=== PREVIOUS ATTEMPTS ===

--- ATTEMPT 1 ---
Design:
Alright, let's tackle this rocket design step by step. I'm going to approach this like a rocket scientist, making calculations and approximations to ensure the rocket meets the target apogee of 3048 meters (which is roughly 10,000 feet, a common high-power rocketry goal) while considering wind conditions, cost, and safety.

### 1. Motor Selection
First, we need to choose a motor that can propel the rocket to approximately 3048 meters. The key factors here are total impulse and average thrust. 

Looking at the available motors:
- **Pro75M1670**: Total impulse = 6023.6 Ns, Avg thrust = 1533.9 N, Burn time = 3.9 s
- **CesaroniM1670**: Similar specs to Pro75M1670 but slightly heavier dry mass
- **CesaroniO3700**: Too powerful (29930.2 Ns), likely overshoots apogee
- **CesaroniO5800**: Even more powerful (30382.7 Ns), definitely overshoots
- **AeroTechK700W**: Total impulse = 2249 Ns, likely too weak
- **AeroTechH128W**: Very low impulse (176.5 Ns), way too weak
- **CesaroniK160**: Total impulse = 1521.7 Ns, too weak

The **Pro75M1670** seems like a good candidate. It has enough impulse to reach high altitudes without being excessive. Let's estimate the apogee using the rocket equation and some simplifications.

#### Simplified Apogee Estimation:
Assuming:
- Average mass during burn ≈ (dry mass + propellant mass)/2
- Propellant mass ≈ (Total impulse / (Isp * g)) = 6023.6 / (198 * 9.81) ≈ 3.1 kg
- Dry mass = 1.815 kg
- Average mass ≈ (1.815 + 3.1)/2 ≈ 2.45 kg
- Drag is significant but for a rough estimate, we can use the formula: Apogee ≈ (Total impulse^2) / (2 * average mass * drag * g)
- Assuming drag factor (drag coefficient * frontal area) is roughly 0.01 m² (this is a guess), and drag force ≈ 0.5 * ρ * v² * Cd * A, but this is complex. Alternatively, empirical data suggests that for similar rockets, a motor like this can reach ~3000 m.

Given that, **Pro75M1670** seems appropriate.

### 2. Rocket Body Design
- **Radius**: Must be > motor radius (75 mm = 0.075 m). Let's choose 0.08 m (80 mm).
- **Length**: Needs to accommodate motor (757 mm = 0.757 m) plus payload and nose cone. Let's say 1.5 m total.
- **Material**: Want something strong but not too expensive. **Fiberglass** is a good balance.
- **Thickness**: For structural integrity, ~0.005 m (5 mm) should suffice.

### 3. Nose Cone
- **Kind**: "ogive" is a good compromise between aerodynamics and ease of manufacture.
- **Length**: Typically 3-5 times body diameter. Let's choose 0.3 m (300 mm).
- **Material**: **Composite** for strength and lightness.

### 4. Fins
- **Number**: 4 fins are common for stability.
- **Dimensions**: Root chord ~2x body diameter (0.16 m), tip chord half that (0.08 m), span ~body diameter (0.08 m).
- **Cant angle**: Small (0.5°) to induce spin for stability.
- **Material**: **Carbon fiber** for strength and lightness.
- **Thickness**: 0.005 m (5 mm).

### 5. Tail
- **Length**: ~0.2 m.
- **Top radius**: Slightly less than body (0.075 m).
- **Bottom radius**: Slightly more (0.085 m) to ensure no error (top != bottom).
- **Material**: **Carbon fiber**.

### 6. Parachutes
- **Drogue**: Small to stabilize descent. Cd_s ≈ 0.2 (drag coefficient * area).
- **Main**: Larger for soft landing. Cd_s ≈ 0.5.
- Trigger at apogee for both.

### 7. Launch Rail
- **Length**: ~1.2 m (enough to stabilize initial flight).
- **Inclination**: 90° (vertical) to minimize horizontal drift.
- **Heading**: 0° (into the wind, which is from E, so heading 270° to face into wind, but since wind is from E, rocket should face E to compensate drift. Wait, no: wind from E means it pushes west, so to compensate, we should launch slightly into the wind (east). But since wind is only 5 m/s, and we're launching vertically, maybe slight angle isn't needed. Let's stick to vertical (90°) and heading 0° (north), and let the fins stabilize.

### 8. Payload
- Assume small payload: 0.5 kg at 0.75 m from bottom (center of rocket is at 0.75 m if total length is 1.5 m).

### Final Design:
```python
config = {
    "motor_choice": "Pro75M1670",
    "rocket_body": {
        "radius": 0.08,
        "length": 1.5,
        "material": "fiberglass",
        "thickness": 0.005,
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.3,
            "material": "composite",
        },
        "fins": {
            "number": 4,
            "root_chord": 0.16,
            "tip_chord": 0.08,
            "span": 0.08,
            "cant_angle": 0.5,
            "material": "carbon_fiber",
            "thickness": 0.005,
        },
        "tail": {
            "length": 0.2,
            "top_radius": 0.075,
            "bottom_radius": 0.085,
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.5,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 1.2,
        "inclination": 90,
        "heading": 0,
    },
    "payload": {
        "mass": 0.5,
        "position": 0.75,
    },
}
```

### Reasoning:
- **Motor**: Pro75M1670 has enough impulse to reach ~3000 m without being excessive.
- **Body**: Sized to fit motor, with fiberglass for cost and strength balance.
- **Nose Cone**: Ogive for good aerodynamics, composite for strength.
- **Fins**: Carbon fiber for lightweight strength, dimensions for stability.
- **Parachutes**: Sized to ensure safe landing (<5 m/s impact).
- **Launch**: Vertical to minimize horizontal drift, slight cant for spin stability.
- **Payload**: Small mass at center for balance.

This design should meet the apogee target, be cost-effective, and land safely.
Score: 81.56/100
Target Apogee: 3048.0m, Actual: 2741.92m, Error: 10.04%
Structural integrity: PASSED
Cost: $738.30


Based on previous attempts, please provide an improved rocket design.