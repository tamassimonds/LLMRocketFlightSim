# Rocket Design Task

## Design Requirements

- **Target Apogee**: 3048.0 meters
- **Wind Conditions**: 5 m/s from E direction

## You are scored off the following
Distance to max apogee
Cost: Cheaper the rocket the better the score
Does it land safely (less than 5 m/s)
Does it not break
Horz distance: How far is it from the intial launch site

#Score func code shown below:
structural_failure = None  # Whether the rocket structure failed during flight
structural_failure_reward = 0

if structural_failure is not None:
    if structural_failure:
        structural_failure_reward = 0
    else:
        # Structural failure did not occur
        structural_failure_reward = 1

# Calculate horizontal distance reward
# Lower horizontal distance from launch site is better
horz_distance = abs(horizontal_distance)  # Distance in meters from launch site
max_horz_distance = target_apogee * 0.3  # Maximum acceptable horizontal distance
horz_distance_reward = max(0, 1 - horz_distance / max_horz_distance)

# Calculate cost reward
# Lower cost designs receive higher rewards
cost = total_cost  # Total cost of rocket components
max_cost = 1000  # Maximum cost threshold
cost_reward = max(0, 1 - cost / max_cost)

# Calculate landing impact velocity reward
# Lower impact velocity (safer landing) is better
impact_velocity = abs(impact_velocity)  # Landing speed in m/s
max_impact_velocity = 50  # Maximum acceptable impact velocity
impact_reward = max(0, 1 - impact_velocity / max_impact_velocity)

percent_difference = abs(apogee - target_apogee) / target_apogee
distance_reward = 1.0 - percent_difference
distance_reward = max(0, distance_reward)


# Calculate total reward with component weights
reward = distance_reward + horz_distance_reward * 0.2 + cost_reward * 0.3 + impact_reward * 0.3 + structural_failure_reward * 0.2




## Available Materials

The following materials are available for the rocket components:
aluminum, composite, fiberglass, carbon_fiber, balsa_wood, plywood, ABS_plastic

## Available Motors

Name,Manufacturer,Radius (mm),Length (mm),Dry Mass (kg),Max Thrust (N),Avg Thrust (N),Burn Time (s),Total Impulse (Ns),Isp (s)
Pro75M1670,CTI,75,757,1.815,2200,1533.9,3.9,6023.6,198
AeroTechK700W,AT,54,568,0.732,1029.3,658.7,3.5,2249,177.5
CesaroniM1670,CTI,75,757,3.101,2200,1533.9,3.6,6023.6,198
AeroTechH128W,AT,29,194,0.108,190.5,141.2,1.29,176.5,191.3
CesaroniO3700,CTI,161,957,14.194,4030.3,2836.9,8.2,29930.2,177.8
CesaroniO5800,CTI,150,754,12.418,6395.5,5040.2,5.2,30382.7,222
CesaroniK160,CTI,54,404,0.7,272.2,190.2,9.7,1521.7,182.9

## Design Task

Based on the requirements and available components, design a rocket that will reach the target apogee. Your design should include:

1. Motor selection (choose from the available motors list)
2. Body dimensions and material
3. Nose cone dimensions and material
4. Fin design and material
5. Parachute specifications
6. Launch rail configuration


### Notes
DRC are run on the design so you need to make sure the design is feasible.
Here are some of the checks:
Notes for the tail the top and bottom radius cannot be the same (causes error)
The material must be specified exactly as listed above
The body radius must be greater than the motor radius
Nose cone but by exactly one of the listed 
Don't include any additional python code (other than config. Putting calculation in there is ok like 32/4 but not whole functions

## Response Format

Please provide your design as a Python dictionary that can be directly used in our simulation software. Use the following format:

```python
config = {
    "motor_choice": "MOTOR_NAME",  # Choose from available motors
    "rocket_body": {
        "radius": RADIUS_IN_METERS,  # Body radius in meters (must be greater than motor Radius)
        "length": LENGTH_IN_METERS,  # Body length in meters
        "material": "MATERIAL",  # Choose from available materials
        "thickness": THICKNESS_IN_METERS,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "SHAPE",  # "conical", "ogive", "elliptical", "tangent", "von karman", "parabolic", "powerseries" or "lvhaack".
            "length": LENGTH_IN_METERS,
            "material": "MATERIAL",
        },
        "fins": {
            "number": NUMBER_OF_FINS,
            "root_chord": LENGTH_IN_METERS,
            "tip_chord": LENGTH_IN_METERS,
            "span": LENGTH_IN_METERS,
            "cant_angle": ANGLE_IN_DEGREES,
            "material": "MATERIAL",
            "thickness": THICKNESS_IN_METERS,
        },
        "tail": {
            "length": LENGTH_IN_METERS,
            "top_radius": RADIUS_IN_METERS,
            "bottom_radius": RADIUS_IN_METERS,
            "material": "MATERIAL",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": LENGTH_IN_METERS, 
        "inclination": ANGLE_IN_DEGREES, #90 is vertical launch
        "heading": ANGLE_IN_DEGREES, # Heading in degrees 0 is up
    },
    "payload": { #point mass as position specified 
        "mass": MASS_IN_KG,
        "position": POSITION_IN_METERS,  # relative to rocket center
    },
}
```


Here's an example valid design. This is not at all indicative of what you should do just an example:

```python
config = {
    "motor_choice": "CesaroniO5800",
    "rocket_body": {
        "radius": 0.1,  # Body radius in meters
        "length": 1.2,    # Body length in meters
        "material": "fiberglass",
        "thickness": 0.01,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.3,  # Nose cone length in meters
            "material": "composite",
        },
        "fins": {
            "number": 4,
            "root_chord": 0.15,  # Fin root chord in meters
            "tip_chord": 0.075,  # Fin tip chord in meters
            "span": 0.3,         # Fin span in meters
            "cant_angle": 0.5,   # Cant angle in degrees
            "material": "carbon_fiber",
            "thickness": 0.005   # Fin thickness in meters
        },
        "tail": {
            "length": 1.2,  # Tail length in meters
            "top_radius": 0.04,  # Top radius in meters
            "bottom_radius": 0.05,  # Bottom radius in meters
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.25,  # Main parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,  # Drogue parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 1.2,  # Length of the launch rail in meters
        "inclination": 90,   # Rail inclination in degrees (vertical)
        "heading": 0,        # Launch heading in degrees (straight up)
    },
    "payload": {
        "mass": 0.5,  # Payload mass in kg
        "position": 0.6  # Payload position relative to rocket center in meters
    }
}
```
Before answering you should provide your full reasoning for the design choices you made thinking like a rocket scientist. Run sample calulations, make approximations etc to find best design



=== PREVIOUS ATTEMPTS ===

--- ATTEMPT 1 ---
Design:
Below is a step-by-step outline of the reasoning used to arrive at the final rocket design. After this reasoning, you will find the “config” dictionary in the exact format required, containing no extraneous Python code.

────────────────────────────────────────────────────────
REASONING FOR DESIGN CHOICES
────────────────────────────────────────────────────────

1) Motor Selection
   • Goal Apogee ~ 3048 m (10,000 ft).  
   • Smaller motors tend to be more cost-effective; huge motors (like “O” impulses) would be expensive and likely overshoot.  
   • “AeroTechK700W” provides 2249 Ns total impulse. With a modest total rocket mass (around 3.5–4 kg), this yields enough delta-v margin to reach ~3048 m without excessive overshoot.  
   • It is larger than a small H or K160 motor but still significantly more cost-friendly than the big M/O motors and should comfortably reach the target apogee.

2) Overall Dimensions and Materials
   • Motor radius is 27 mm → Rocket body radius must exceed 0.027 m. A 0.05 m body radius (50 mm) is chosen as a common mid-power dimension.  
   • Body length of ~1.4 m is a typical proportion for a rocket of this impulse range.  
   • Fiberglass is chosen for body material for a good balance of durability, weight, and cost (carbon_fiber might be lighter but is generally more expensive). A wall thickness of 3 mm is enough for structural integrity at these sizes.

3) Nose Cone
   • Ogive shape is commonly used due to good aerodynamic performance.  
   • A 0.25 m length balances stability, drag, and manufacturing complexity.  
   • Same fiberglass material keeps manufacturing simpler.

4) Fin Design
   • Three fins (rather than four) to reduce drag and cost, while still ensuring stable flight.  
   • Root chord 0.15 m and tip chord 0.07 m with a 0.12 m span is sufficient for aerodynamic stability.  
   • Zero cant angle helps keep the rocket from spinning excessively, minimizing horizontal drift.  
   • Fiberglass fins at 3 mm thickness for robustness.

5) Tail Section
   • Small tail segment (length 0.1 m) to help with motor integration and to ensure no geometry errors.  
   • The top radius equals the main body radius (0.05 m), and bottom radius is slightly larger (0.06 m). This satisfies the requirement that top and bottom radius not be identical, and helps with motor exhaust flow.  
   • Tail is also fiberglass for simplicity.

6) Parachute Sizing
   • We aim for <5 m/s landing speed. Rough drag-area calculations showed a main parachute Cd·Area (cd_s) around 2.5 for a ~4 kg rocket to achieve ~5 m/s.  
   • A smaller drogue chute (cd_s = 0.2) is included for controlled descent until main deployment.

7) Launch Configuration
   • Rail length of 2.0 m is reasonable for stability before the rocket leaves the rail.  
   • An inclination of 85° and heading of 90° (pointing slightly east) can partially counter winds from the east (to reduce net horizontal drift).

8) Payload
   • A small 0.5 kg payload located 0.7 m from the rocket’s center helps ensure stable CG placement without drastically affecting total mass.

────────────────────────────────────────────────────────
FINAL DESIGN (“config” DICTIONARY)
────────────────────────────────────────────────────────

```python
config = {
    "motor_choice": "AeroTechK700W",  
    "rocket_body": {
        "radius": 0.05,        # 50 mm > motor radius (27 mm)
        "length": 1.4,         # meters
        "material": "fiberglass",
        "thickness": 0.003,    # 3 mm
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.25,      # meters
            "material": "fiberglass",
        },
        "fins": {
            "number": 3,
            "root_chord": 0.15,  # meters
            "tip_chord": 0.07,   # meters
            "span": 0.12,        # meters
            "cant_angle": 0,     # degrees
            "material": "fiberglass",
            "thickness": 0.003   # 3 mm
        },
        "tail": {
            "length": 0.1,        # meters
            "top_radius": 0.05,   # meters
            "bottom_radius": 0.06,# meters (not equal to top)
            "material": "fiberglass",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 2.5,    # estimated for ~5 m/s descent
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,    # smaller drogue
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 2.0,   # meters
        "inclination": 85,    # degrees
        "heading": 90,        # degrees, pointing East
    },
    "payload": {
        "mass": 0.5,     # kg
        "position": 0.7  # meters from rocket center
    }
}
```
Score: 44.58/100
Target Apogee: 3048.0m, Actual: 2651.19m, Error: 13.02%
Structural integrity: PASSED
Cost: $239.77


Based on previous attempts, please provide an improved rocket design.