# Rocket Design Task

## Design Requirements

- **Target Apogee**: 3048.0 meters
- **Wind Conditions**: 20 m/s from E direction

## You are scored off the following
Distance to max apogee
Cost: Cheaper the rocket the better the score
Does it land safely (less than 5 m/s)
Does it not break
Horz distance: How far is it from the intial launch site

#Score func code shown below:
structural_failure = None  # Whether the rocket structure failed during flight
structural_failure_reward = 0

if structural_failure is not None:
    if structural_failure:
        structural_failure_reward = 0
    else:
        # Structural failure did not occur
        structural_failure_reward = 1

# Calculate horizontal distance reward
# Lower horizontal distance from launch site is better
horz_distance = abs(horizontal_distance)  # Distance in meters from launch site
max_horz_distance = target_apogee * 0.3  # Maximum acceptable horizontal distance
horz_distance_reward = max(0, 1 - horz_distance / max_horz_distance)

# Calculate cost reward
# Lower cost designs receive higher rewards
cost = total_cost  # Total cost of rocket components
max_cost = 1000  # Maximum cost threshold
cost_reward = max(0, 1 - cost / max_cost)

# Calculate landing impact velocity reward
# Lower impact velocity (safer landing) is better
impact_velocity = abs(impact_velocity)  # Landing speed in m/s
max_impact_velocity = 50  # Maximum acceptable impact velocity
impact_reward = max(0, 1 - impact_velocity / max_impact_velocity)

percent_difference = abs(apogee - target_apogee) / target_apogee
distance_reward = 1.0 - percent_difference
distance_reward = max(0, distance_reward)


# Calculate total reward with component weights
reward = distance_reward + horz_distance_reward * 0.2 + cost_reward * 0.3 + impact_reward * 0.3 + structural_failure_reward * 0.2




## Available Materials

The following materials are available for the rocket components:
aluminum, composite, fiberglass, carbon_fiber, balsa_wood, plywood, ABS_plastic

## Available Motors

Name,Manufacturer,Radius (mm),Length (mm),Dry Mass (kg),Max Thrust (N),Avg Thrust (N),Burn Time (s),Total Impulse (Ns),Isp (s)
Pro75M1670,CTI,75,757,1.815,2200,1533.9,3.9,6023.6,198
AeroTechK700W,AT,54,568,0.732,1029.3,658.7,3.5,2249,177.5
CesaroniM1670,CTI,75,757,3.101,2200,1533.9,3.6,6023.6,198
AeroTechH128W,AT,29,194,0.108,190.5,141.2,1.29,176.5,191.3
CesaroniO3700,CTI,161,957,14.194,4030.3,2836.9,8.2,29930.2,177.8
CesaroniO5800,CTI,150,754,12.418,6395.5,5040.2,5.2,30382.7,222
CesaroniK160,CTI,54,404,0.7,272.2,190.2,9.7,1521.7,182.9

## Design Task

Based on the requirements and available components, design a rocket that will reach the target apogee. Your design should include:

1. Motor selection (choose from the available motors list)
2. Body dimensions and material
3. Nose cone dimensions and material
4. Fin design and material
5. Parachute specifications
6. Launch rail configuration


### Notes
DRC are run on the design so you need to make sure the design is feasible.
Here are some of the checks:
Notes for the tail the top and bottom radius cannot be the same (causes error)
The material must be specified exactly as listed above
The body radius must be greater than the motor radius
Nose cone but by exactly one of the listed 
Don't include any additional python code (other than config. Putting calculation in there is ok like 32/4 but not whole functions

## Response Format

Please provide your design as a Python dictionary that can be directly used in our simulation software. Use the following format:

```python
config = {
    "motor_choice": "MOTOR_NAME",  # Choose from available motors
    "rocket_body": {
        "radius": RADIUS_IN_METERS,  # Body radius in meters (must be greater than motor Radius)
        "length": LENGTH_IN_METERS,  # Body length in meters
        "material": "MATERIAL",  # Choose from available materials
        "thickness": THICKNESS_IN_METERS,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "SHAPE",  # "conical", "ogive", "elliptical", "tangent", "von karman", "parabolic", "powerseries" or "lvhaack".
            "length": LENGTH_IN_METERS,
            "material": "MATERIAL",
        },
        "fins": {
            "number": NUMBER_OF_FINS,
            "root_chord": LENGTH_IN_METERS,
            "tip_chord": LENGTH_IN_METERS,
            "span": LENGTH_IN_METERS,
            "cant_angle": ANGLE_IN_DEGREES,
            "material": "MATERIAL",
            "thickness": THICKNESS_IN_METERS,
        },
        "tail": {
            "length": LENGTH_IN_METERS,
            "top_radius": RADIUS_IN_METERS,
            "bottom_radius": RADIUS_IN_METERS,
            "material": "MATERIAL",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": LENGTH_IN_METERS, 
        "inclination": ANGLE_IN_DEGREES, #90 is vertical launch
        "heading": ANGLE_IN_DEGREES, # Heading in degrees 0 is up
    },
    "payload": { #point mass as position specified 
        "mass": MASS_IN_KG,
        "position": POSITION_IN_METERS,  # relative to rocket center
    },
}
```


Here's an example valid design. This is not at all indicative of what you should do just an example:

```python
config = {
    "motor_choice": "CesaroniO5800",
    "rocket_body": {
        "radius": 0.1,  # Body radius in meters
        "length": 1.2,    # Body length in meters
        "material": "fiberglass",
        "thickness": 0.01,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.3,  # Nose cone length in meters
            "material": "composite",
        },
        "fins": {
            "number": 4,
            "root_chord": 0.15,  # Fin root chord in meters
            "tip_chord": 0.075,  # Fin tip chord in meters
            "span": 0.3,         # Fin span in meters
            "cant_angle": 0.5,   # Cant angle in degrees
            "material": "carbon_fiber",
            "thickness": 0.005   # Fin thickness in meters
        },
        "tail": {
            "length": 1.2,  # Tail length in meters
            "top_radius": 0.04,  # Top radius in meters
            "bottom_radius": 0.05,  # Bottom radius in meters
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.25,  # Main parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,  # Drogue parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 1.2,  # Length of the launch rail in meters
        "inclination": 90,   # Rail inclination in degrees (vertical)
        "heading": 0,        # Launch heading in degrees (straight up)
    },
    "payload": {
        "mass": 0.5,  # Payload mass in kg
        "position": 0.6  # Payload position relative to rocket center in meters
    }
}
```
Before answering you should provide your full reasoning for the design choices you made thinking like a rocket scientist. Run sample calulations, make approximations etc to find best design



=== PREVIOUS ATTEMPTS ===

--- ATTEMPT 1 ---
Design:
To design a rocket that meets the requirements and maximizes the score, we need a detailed understanding of each component and the constraints provided. Let's tackle this systematically: 

### Design Considerations and Strategy

1. **Target Apogee**: 3048 meters with minimal deviation.
2. **Wind Conditions**: 20 m/s from the east, so we should consider the aerodynamic stability and adjust launch heading to potentially counteract drift.
3. **Cost Sensitivity**: Keep costs low to improve the cost reward factor.
4. **Safety Considerations**: Ensure impact velocity is less than 5 m/s and minimize structural failure risk.
5. **Components**:
   - **Motor**: Choose based on thrust that can achieve desired apogee.
   - **Material**: Balance between weight, cost, and strength.
   - **Parachute**: Ensure a safe landing velocity.
   - **Aerodynamics**: Minimize drag and optimize for the wind.

### Step-by-Step Approach

#### Step 1: Motor Selection
- **CesaroniK160**: It's a reasonable balance for achieving near-target apogee without excessive costs since it has a relatively high Isp and thrust, but it's designed for longer burns.

#### Step 2: Rocket Body
- **Material**: Use **fiberglass**. It's cost-effective and provides a good balance of strength-to-weight.
- **Dimensions**: 
  - **Radius**: Slightly larger than the motor radius to ensure fitment. Motor radius is 54 mm, so choose 0.08 meters.
  - **Length**: Start with 1.8 meters for the body to accommodate the motor and payload effectively.
  - **Wall Thickness**: 0.005 meters for structural integrity.

#### Step 3: Nose Cone
- **Shape**: Opt for an **ogive shape** for reduced drag, common in atmospheric aerodynamics.
- **Length and Material**: 0.2 meters using **fiberglass**.

#### Step 4: Fins
- **Number & Material**: Use 3 fins made of **carbon_fiber** for aerodynamic stability and minimal weight.
- **Dimensions**:
  - Root Chord: 0.15 meters
  - Tip Chord: 0.075 meters
  - Span: 0.15 meters
  - Cant Angle: 0 degrees for simplicity and minimizing drag
  - Thickness: 0.003 meters

#### Step 5: Tail
- **Material**: Use **carbon_fiber** to ensure strength with lightweight characteristics.
- **Design**: A simple flare for stability, top radius of 0.08 meters and bottom radius of 0.1 meters.
  
#### Step 6: Parachute System
- **Main Parachute**:
  - **Cd_S**: Design for a descent rate of approximately 4.5 m/s.
  - Area estimation: 0.5 (requires some iteration and testing)
- **Drogue Parachute**:
  - **Cd_S**: Smaller surface area designed for controlled descent post-apogee, set at 0.15.

#### Step 7: Launch Rail
- **Length**: 5 meters to ensure full velocity stabilization before leaving the rail.
- **Inclination**: Set to 88 degrees, slightly off vertical, accounting for wind drift with a heading towards the wind (180 degrees to counter east wind).

#### Step 8: Payload
- Include a lightweight payload to simulate realistic flight conditions without greatly affecting performance.
- Set mass to 1 kg placed at the center (position: 0.9 meters) adjacent to the rocket's center of gravity.

### Proposed Design

```python
config = {
    "motor_choice": "CesaroniK160",
    "rocket_body": {
        "radius": 0.08,  # Body radius in meters
        "length": 1.8,    # Body length in meters
        "material": "fiberglass",
        "thickness": 0.005,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.2,  # Nose cone length in meters
            "material": "fiberglass",
        },
        "fins": {
            "number": 3,
            "root_chord": 0.15,  # Fin root chord in meters
            "tip_chord": 0.075,  # Fin tip chord in meters
            "span": 0.15,        # Fin span in meters
            "cant_angle": 0,     # Cant angle in degrees
            "material": "carbon_fiber",
            "thickness": 0.003   # Fin thickness in meters
        },
        "tail": {
            "length": 0.2,  # Tail length in meters
            "top_radius": 0.08,  # Top radius in meters
            "bottom_radius": 0.1,  # Bottom radius in meters
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.5,  # Main parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.15,  # Drogue parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 5.0,  # Length of the launch rail in meters
        "inclination": 88,   # Rail inclination in degrees (slightly off vertical)
        "heading": 180,      # Launch heading in degrees (counter east wind)
    },
    "payload": {
        "mass": 1.0,  # Payload mass in kg
        "position": 0.9  # Payload position relative to rocket center in meters
    }
}
```

### Final Thoughts
This design balances cost, materials, and structural integrity to achieve the target apogee efficiently. It accounts for wind drift with appropriate adjustments, ensuring a safe and economical flight.
Score: 41.22/100
Target Apogee: 3048.0m, Actual: 19.91m, Error: 99.35%
Structural integrity: PASSED
Cost: $343.19

--- ATTEMPT 2 ---
Design:
In order to improve the rocket design and ensure it reaches the desired apogee of 3048 meters while optimizing cost, safety, and other parameters, we'll need to make some strategic adjustments. Let's address the shortcomings from the last attempt and devise a more suitable design.

### Design Strategy

1. **Motor Selection**: The previous motor choice, **CesaroniK160**, was severely underpowered for achieving the target apogee. We need a motor with higher thrust and total impulse. Given our options, we will explore a more potent motor.
   
2. **Rocket Dimensions and Materials**: To accommodate a larger motor and enhance aerodynamic performance, we'll adjust the dimensions and select suitable materials.

3. **Aerodynamics**: Optimize the nose cone and fin design for reduced drag.

4. **Parachute System**: Ensure parachutes are adequately sized for a safe landing speed.

5. **Cost and Structural Integrity**: Balance the choice of materials to keep costs under control while ensuring structural integrity.

### Step-by-Step Approach

#### Step 1: Motor Selection
- Choose **CesaroniM1670**, which provides a higher average thrust of 1533.9 N and a total impulse of 6023.6 Ns. It’s a significant step up from the previous motor choice, allowing the rocket to achieve a higher apogee.

#### Step 2: Rocket Body
- **Material**: Use **fiberglass** for a balance between affordability and strength.
- **Dimensions**:
  - **Radius**: 0.08 meters (motor radius is 0.075 meters).
  - **Length**: 2.5 meters to house the larger motor while ensuring stability.
  - **Wall Thickness**: 0.005 meters.

#### Step 3: Nose Cone
- **Shape**: Use an **ogive** or **tangent** shape for efficient aerodynamics.
- **Length and Material**: 0.3 meters, using **fiberglass** to minimize weight and cost.

#### Step 4: Fins
- **Number and Material**: Use 3 fins made of **carbon_fiber** to maintain a light yet sturdy framework.
- **Dimensions**:
  - Root Chord: 0.2 meters
  - Tip Chord: 0.1 meters
  - Span: 0.2 meters
  - Cant Angle: 0 degrees for straightforward drag-minimizing design.
  - Thickness: 0.004 meters

#### Step 5: Tail
- **Material**: Use **carbon_fiber** for a strong and light structure.
- **Design**: A flared design for stability; top radius 0.08 meters and bottom radius 0.09 meters.

#### Step 6: Parachute System
- **Main Parachute**:
  - **Cd_S**: Larger value such as 0.6 to ensure a gentler landing speed.
- **Drogue Parachute**:
  - **Cd_S**: Adjusted to 0.3 for controlled descent after reaching apogee.

#### Step 7: Launch Rail
- **Length**: 5 meters for ample stabilization during launch.
- **Inclination and Heading**: Set to 88 degrees inclination with a 180-degree heading to counteract the 20 m/s wind from the east.

#### Step 8: Payload
- **Payload mass**: 0.5 kg for a modest additional mass.
- **Position**: Centered at 1.25 meters to balance the rocket.

### Proposed Design

```python
config = {
    "motor_choice": "CesaroniM1670",
    "rocket_body": {
        "radius": 0.08,
        "length": 2.5,
        "material": "fiberglass",
        "thickness": 0.005,
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.3,
            "material": "fiberglass",
        },
        "fins": {
            "number": 3,
            "root_chord": 0.2,
            "tip_chord": 0.1,
            "span": 0.2,
            "cant_angle": 0,
            "material": "carbon_fiber",
            "thickness": 0.004,
        },
        "tail": {
            "length": 0.2,
            "top_radius": 0.08,
            "bottom_radius": 0.09,
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.6,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.3,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 5.0,
        "inclination": 88,
        "heading": 180,
    },
    "payload": {
        "mass": 0.5,
        "position": 1.25,
    }
}
```

### Final Thoughts
This design aims to achieve the target apogee of 3048 meters with a more powerful motor and optimized aerodynamic properties. By making these adjustments, the rocket should be able to reach the desired height efficiently, while also staying within cost constraints and ensuring a safe recovery.
Score: 47.69/100
Target Apogee: 3048.0m, Actual: 1409.98m, Error: 53.74%
Structural integrity: PASSED
Cost: $842.78


Based on previous attempts, please provide an improved rocket design that will reach the target apogee of 3048.0m.