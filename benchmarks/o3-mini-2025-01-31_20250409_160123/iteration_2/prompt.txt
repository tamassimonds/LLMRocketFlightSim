# Rocket Design Task

## Design Requirements

- **Target Apogee**: 3048.0 meters
- **Wind Conditions**: 5 m/s from E direction

## You are scored off the following
Distance to max apogee
Cost: Cheaper the rocket the better the score
Does it land safely (less than 5 m/s)
Does it not break
Horz distance: How far is it from the intial launch site

#Score func code shown below:
structural_failure = None  # Whether the rocket structure failed during flight
structural_failure_reward = 0

if structural_failure is not None:
    if structural_failure:
        structural_failure_reward = 0
    else:
        # Structural failure did not occur
        structural_failure_reward = 1

# Calculate horizontal distance reward
# Lower horizontal distance from launch site is better
horz_distance = abs(horizontal_distance)  # Distance in meters from launch site
max_horz_distance = target_apogee * 0.3  # Maximum acceptable horizontal distance
horz_distance_reward = max(0, 1 - horz_distance / max_horz_distance)

# Calculate cost reward
# Lower cost designs receive higher rewards
cost = total_cost  # Total cost of rocket components
max_cost = 1000  # Maximum cost threshold
cost_reward = max(0, 1 - cost / max_cost)

# Calculate landing impact velocity reward
# Lower impact velocity (safer landing) is better
impact_velocity = abs(impact_velocity)  # Landing speed in m/s
max_impact_velocity = 50  # Maximum acceptable impact velocity
impact_reward = max(0, 1 - impact_velocity / max_impact_velocity)

percent_difference = abs(apogee - target_apogee) / target_apogee
distance_reward = 1.0 - percent_difference
distance_reward = max(0, distance_reward)


# Calculate total reward with component weights
reward = distance_reward + horz_distance_reward * 0.2 + cost_reward * 0.3 + impact_reward * 0.3 + structural_failure_reward * 0.2




## Available Materials

The following materials are available for the rocket components:
aluminum, composite, fiberglass, carbon_fiber, balsa_wood, plywood, ABS_plastic

## Available Motors

Name,Manufacturer,Radius (mm),Length (mm),Dry Mass (kg),Max Thrust (N),Avg Thrust (N),Burn Time (s),Total Impulse (Ns),Isp (s)
Pro75M1670,CTI,75,757,1.815,2200,1533.9,3.9,6023.6,198
AeroTechK700W,AT,54,568,0.732,1029.3,658.7,3.5,2249,177.5
CesaroniM1670,CTI,75,757,3.101,2200,1533.9,3.6,6023.6,198
AeroTechH128W,AT,29,194,0.108,190.5,141.2,1.29,176.5,191.3
CesaroniO3700,CTI,161,957,14.194,4030.3,2836.9,8.2,29930.2,177.8
CesaroniO5800,CTI,150,754,12.418,6395.5,5040.2,5.2,30382.7,222
CesaroniK160,CTI,54,404,0.7,272.2,190.2,9.7,1521.7,182.9

## Design Task

Based on the requirements and available components, design a rocket that will reach the target apogee. Your design should include:

1. Motor selection (choose from the available motors list)
2. Body dimensions and material
3. Nose cone dimensions and material
4. Fin design and material
5. Parachute specifications
6. Launch rail configuration


### Notes
DRC are run on the design so you need to make sure the design is feasible.
Here are some of the checks:
Notes for the tail the top and bottom radius cannot be the same (causes error)
The material must be specified exactly as listed above
The body radius must be greater than the motor radius
Nose cone but by exactly one of the listed 
Don't include any additional python code (other than config. Putting calculation in there is ok like 32/4 but not whole functions

## Response Format

Please provide your design as a Python dictionary that can be directly used in our simulation software. Use the following format:

```python
config = {
    "motor_choice": "MOTOR_NAME",  # Choose from available motors
    "rocket_body": {
        "radius": RADIUS_IN_METERS,  # Body radius in meters (must be greater than motor Radius)
        "length": LENGTH_IN_METERS,  # Body length in meters
        "material": "MATERIAL",  # Choose from available materials
        "thickness": THICKNESS_IN_METERS,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "SHAPE",  # "conical", "ogive", "elliptical", "tangent", "von karman", "parabolic", "powerseries" or "lvhaack".
            "length": LENGTH_IN_METERS,
            "material": "MATERIAL",
        },
        "fins": {
            "number": NUMBER_OF_FINS,
            "root_chord": LENGTH_IN_METERS,
            "tip_chord": LENGTH_IN_METERS,
            "span": LENGTH_IN_METERS,
            "cant_angle": ANGLE_IN_DEGREES,
            "material": "MATERIAL",
            "thickness": THICKNESS_IN_METERS,
        },
        "tail": {
            "length": LENGTH_IN_METERS,
            "top_radius": RADIUS_IN_METERS,
            "bottom_radius": RADIUS_IN_METERS,
            "material": "MATERIAL",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": LENGTH_IN_METERS, 
        "inclination": ANGLE_IN_DEGREES, #90 is vertical launch
        "heading": ANGLE_IN_DEGREES, # Heading in degrees 0 is up
    },
    "payload": { #point mass as position specified 
        "mass": MASS_IN_KG,
        "position": POSITION_IN_METERS,  # relative to rocket center
    },
}
```


Here's an example valid design. This is not at all indicative of what you should do just an example:

```python
config = {
    "motor_choice": "CesaroniO5800",
    "rocket_body": {
        "radius": 0.1,  # Body radius in meters
        "length": 1.2,    # Body length in meters
        "material": "fiberglass",
        "thickness": 0.01,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.3,  # Nose cone length in meters
            "material": "composite",
        },
        "fins": {
            "number": 4,
            "root_chord": 0.15,  # Fin root chord in meters
            "tip_chord": 0.075,  # Fin tip chord in meters
            "span": 0.3,         # Fin span in meters
            "cant_angle": 0.5,   # Cant angle in degrees
            "material": "carbon_fiber",
            "thickness": 0.005   # Fin thickness in meters
        },
        "tail": {
            "length": 1.2,  # Tail length in meters
            "top_radius": 0.04,  # Top radius in meters
            "bottom_radius": 0.05,  # Bottom radius in meters
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.25,  # Main parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,  # Drogue parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 1.2,  # Length of the launch rail in meters
        "inclination": 90,   # Rail inclination in degrees (vertical)
        "heading": 0,        # Launch heading in degrees (straight up)
    },
    "payload": {
        "mass": 0.5,  # Payload mass in kg
        "position": 0.6  # Payload position relative to rocket center in meters
    }
}
```
Before answering you should provide your full reasoning for the design choices you made thinking like a rocket scientist. Run sample calulations, make approximations etc to find best design



=== PREVIOUS ATTEMPTS ===

--- ATTEMPT 1 ---
Design:
Below is my reasoning along with the final configuration.

──────────────────────────────
Design Reasoning:

1. Motor Choice:
   • We need enough impulse to roughly reach 3048 m (10,000 ft) and yet keep the mass and cost moderate. Using a moderate-performance motor is desirable. The Pro75M1670 provides about 6023.6 Ns of total impulse at a moderate mass (1.815 kg) and with a burn time of about 3.9 seconds. This makes it a good candidate for achieving our target while not overdesigning (and overcosting) the vehicle.
   • Note that the motor’s radius is 75 mm (0.075 m), so the body must use a radius larger than that.

2. Rocket Body:
   • I choose a body radius of 0.1 m. This leaves clearance over the motor while keeping the vehicle streamlined.
   • A length of 2.0 m is chosen to accommodate the motor, structural bulk, and recovery systems (airframe plus nose cone).
   • The material selected is “aluminum” because it is widely available, reasonably strong, and cost‐effective.
   • A wall thickness of 0.005 m is assumed to provide sufficient strength without excess weight.

3. Aerodynamics:
   Nose Cone:
     • An “ogive” profile is chosen for its favorable aerodynamic properties in reducing drag during ascent.
     • A nose cone length of 0.3 m is selected.
     • “composite” material is chosen to keep it light and efficient.
     
   Fins:
     • Four fins are chosen for multi-axis stability.
     • Fin dimensions are selected as follows: a root chord of 0.15 m and a tip chord of 0.075 m (tapered design) to reduce drag and weight.
     • A span (fins’ outboard length) of 0.3 m is adequate.
     • A slight cant angle (0.5°) is used to help with roll stability.
     • “carbon_fiber” is picked for the fins to ensure low weight and high stiffness.
     • A thickness of 0.005 m provides sufficient rigidity.
     
   Tail:
     • The tail section is used to attach and support aerodynamic surfaces. Since the design rule requires the top and bottom radii not to be equal (to avoid errors), I choose a top_radius of 0.04 m and a bottom_radius of 0.05 m.
     • A tail “length” of 0.2 m is selected.
     • “carbon_fiber” is used for its strength and consistency with the fins.
   
4. Parachute Specifications:
   • Both main and drogue parachutes are included.
   • The main chute is given a cd_s value (area * drag coefficient) of 0.25 to ensure a slow, safe descent.
   • The drogue chute uses a cd_s of 0.2.
   • Both are triggered at apogee, sampled at 105 Hz, with a lag of 1.5 s and noise parameters (0, 8.3, 0.5) as specified.
     
5. Launch Rail and Orientation:
   • A rail length of 1.2 m is selected for stability during the initial powered phase.
   • The rail is set at 90° to ensure a vertical launch.
   • The heading is kept at 0°; although there is a 5 m/s wind from the east, aiming vertically helps mitigate lateral displacement.
     
6. Payload:
   • A payload mass of 0.5 kg (a modest point mass) is assumed.
   • Its position is set near mid‐length (0.6 m from the rocket’s center) to maintain the vehicle’s balance.

──────────────────────────────
Below is the final configuration dictionary in Python:

------------------------------------------------

```python
config = {
    "motor_choice": "Pro75M1670",  # Selected for moderate impulse (6023.6 Ns) and mass (1.815 kg)
    "rocket_body": {
        "radius": 0.1,  # meters; must be greater than motor radius (0.075 m)
        "length": 2.0,  # meters; provides sufficient volume
        "material": "aluminum",  # Chosen for strength and cost-effectiveness
        "thickness": 0.005,  # meters; wall thickness
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",  # Aerodynamically efficient shape
            "length": 0.3,  # meters; nose cone length
            "material": "composite",  # Light and strong material
        },
        "fins": {
            "number": 4,
            "root_chord": 0.15,  # meters; base of the fin
            "tip_chord": 0.075,  # meters; tip of the fin (ensures taper)
            "span": 0.3,         # meters; from the body to the fin tip
            "cant_angle": 0.5,   # degrees; slight cant for improved roll stability
            "material": "carbon_fiber",  # Provides high strength-to-weight ratio
            "thickness": 0.005,  # meters; robust enough to prevent breakage
        },
        "tail": {
            "length": 0.2,  # meters; short tail extension for aerodynamic stability
            "top_radius": 0.04,  # meters; must be different from bottom_radius
            "bottom_radius": 0.05,  # meters; ensures design check passes
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.25,  # Effective drag area for a safe descent speed
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,  # Slightly smaller than main to deploy earlier for stabilization
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 1.2,  # meters; provides stable powered flight initiation
        "inclination": 90,   # degrees; vertical launch to minimize horizontal drift
        "heading": 0,        # degrees; launching straight up despite a 5 m/s crosswind from the east
    },
    "payload": {
        "mass": 0.5,  # kg; a representative, modest mass placed within the rocket
        "position": 0.6,  # meters; relative to the rocket center for balanced mass distribution
    },
}
```

──────────────────────────────
This design aims to balance the target apogee with low horizontal drift, minimized cost through material and component selection, and safe landing characteristics with parachute sizing and strong, lightweight construction.
Score: 9.82/100
Target Apogee: 3048.0m, Actual: 1320.68m, Error: 56.67%
Structural integrity: PASSED
Cost: $776.24


Based on previous attempts, please provide an improved rocket design.