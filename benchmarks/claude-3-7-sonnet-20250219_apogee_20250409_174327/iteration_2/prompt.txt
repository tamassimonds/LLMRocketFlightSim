# Rocket Design Task

## Design Requirements

- **Target Apogee**: 3048.0 meters
- **Wind Conditions**: 20 m/s from E direction

## You are scored off the following
Distance to max apogee
Cost: Cheaper the rocket the better the score
Does it land safely (less than 5 m/s)
Does it not break
Horz distance: How far is it from the intial launch site

#Score func code shown below:
structural_failure = None  # Whether the rocket structure failed during flight
structural_failure_reward = 0

if structural_failure is not None:
    if structural_failure:
        structural_failure_reward = 0
    else:
        # Structural failure did not occur
        structural_failure_reward = 1

# Calculate horizontal distance reward
# Lower horizontal distance from launch site is better
horz_distance = abs(horizontal_distance)  # Distance in meters from launch site
max_horz_distance = target_apogee * 0.3  # Maximum acceptable horizontal distance
horz_distance_reward = max(0, 1 - horz_distance / max_horz_distance)

# Calculate cost reward
# Lower cost designs receive higher rewards
cost = total_cost  # Total cost of rocket components
max_cost = 1000  # Maximum cost threshold
cost_reward = max(0, 1 - cost / max_cost)

# Calculate landing impact velocity reward
# Lower impact velocity (safer landing) is better
impact_velocity = abs(impact_velocity)  # Landing speed in m/s
max_impact_velocity = 50  # Maximum acceptable impact velocity
impact_reward = max(0, 1 - impact_velocity / max_impact_velocity)

percent_difference = abs(apogee - target_apogee) / target_apogee
distance_reward = 1.0 - percent_difference
distance_reward = max(0, distance_reward)


# Calculate total reward with component weights
reward = distance_reward + horz_distance_reward * 0.2 + cost_reward * 0.3 + impact_reward * 0.3 + structural_failure_reward * 0.2




## Available Materials

The following materials are available for the rocket components:
aluminum, composite, fiberglass, carbon_fiber, balsa_wood, plywood, ABS_plastic

## Available Motors

Name,Manufacturer,Radius (mm),Length (mm),Dry Mass (kg),Max Thrust (N),Avg Thrust (N),Burn Time (s),Total Impulse (Ns),Isp (s)
Pro75M1670,CTI,75,757,1.815,2200,1533.9,3.9,6023.6,198
AeroTechK700W,AT,54,568,0.732,1029.3,658.7,3.5,2249,177.5
CesaroniM1670,CTI,75,757,3.101,2200,1533.9,3.6,6023.6,198
AeroTechH128W,AT,29,194,0.108,190.5,141.2,1.29,176.5,191.3
CesaroniO3700,CTI,161,957,14.194,4030.3,2836.9,8.2,29930.2,177.8
CesaroniO5800,CTI,150,754,12.418,6395.5,5040.2,5.2,30382.7,222
CesaroniK160,CTI,54,404,0.7,272.2,190.2,9.7,1521.7,182.9

## Design Task

Based on the requirements and available components, design a rocket that will reach the target apogee. Your design should include:

1. Motor selection (choose from the available motors list)
2. Body dimensions and material
3. Nose cone dimensions and material
4. Fin design and material
5. Parachute specifications
6. Launch rail configuration


### Notes
DRC are run on the design so you need to make sure the design is feasible.
Here are some of the checks:
Notes for the tail the top and bottom radius cannot be the same (causes error)
The material must be specified exactly as listed above
The body radius must be greater than the motor radius
Nose cone but by exactly one of the listed 
Don't include any additional python code (other than config. Putting calculation in there is ok like 32/4 but not whole functions

## Response Format

Please provide your design as a Python dictionary that can be directly used in our simulation software. Use the following format:

```python
config = {
    "motor_choice": "MOTOR_NAME",  # Choose from available motors
    "rocket_body": {
        "radius": RADIUS_IN_METERS,  # Body radius in meters (must be greater than motor Radius)
        "length": LENGTH_IN_METERS,  # Body length in meters
        "material": "MATERIAL",  # Choose from available materials
        "thickness": THICKNESS_IN_METERS,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "SHAPE",  # "conical", "ogive", "elliptical", "tangent", "von karman", "parabolic", "powerseries" or "lvhaack".
            "length": LENGTH_IN_METERS,
            "material": "MATERIAL",
        },
        "fins": {
            "number": NUMBER_OF_FINS,
            "root_chord": LENGTH_IN_METERS,
            "tip_chord": LENGTH_IN_METERS,
            "span": LENGTH_IN_METERS,
            "cant_angle": ANGLE_IN_DEGREES,
            "material": "MATERIAL",
            "thickness": THICKNESS_IN_METERS,
        },
        "tail": {
            "length": LENGTH_IN_METERS,
            "top_radius": RADIUS_IN_METERS,
            "bottom_radius": RADIUS_IN_METERS,
            "material": "MATERIAL",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": LENGTH_IN_METERS, 
        "inclination": ANGLE_IN_DEGREES, #90 is vertical launch
        "heading": ANGLE_IN_DEGREES, # Heading in degrees 0 is up
    },
    "payload": { #point mass as position specified 
        "mass": MASS_IN_KG,
        "position": POSITION_IN_METERS,  # relative to rocket center
    },
}
```


Here's an example valid design. This is not at all indicative of what you should do just an example:

```python
config = {
    "motor_choice": "CesaroniO5800",
    "rocket_body": {
        "radius": 0.1,  # Body radius in meters
        "length": 1.2,    # Body length in meters
        "material": "fiberglass",
        "thickness": 0.01,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.3,  # Nose cone length in meters
            "material": "composite",
        },
        "fins": {
            "number": 4,
            "root_chord": 0.15,  # Fin root chord in meters
            "tip_chord": 0.075,  # Fin tip chord in meters
            "span": 0.3,         # Fin span in meters
            "cant_angle": 0.5,   # Cant angle in degrees
            "material": "carbon_fiber",
            "thickness": 0.005   # Fin thickness in meters
        },
        "tail": {
            "length": 1.2,  # Tail length in meters
            "top_radius": 0.04,  # Top radius in meters
            "bottom_radius": 0.05,  # Bottom radius in meters
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.25,  # Main parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,  # Drogue parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 1.2,  # Length of the launch rail in meters
        "inclination": 90,   # Rail inclination in degrees (vertical)
        "heading": 0,        # Launch heading in degrees (straight up)
    },
    "payload": {
        "mass": 0.5,  # Payload mass in kg
        "position": 0.6  # Payload position relative to rocket center in meters
    }
}
```
Before answering you should provide your full reasoning for the design choices you made thinking like a rocket scientist. Run sample calulations, make approximations etc to find best design



=== PREVIOUS ATTEMPTS ===

--- ATTEMPT 1 ---
Design:
# Rocket Design Analysis

## Initial Considerations

To design a rocket that reaches a target apogee of 3048 meters (10,000 ft) in 20 m/s easterly winds, I need to balance several factors:

1. **Motor selection**: Must provide enough thrust to reach target apogee without excessive overshoot
2. **Aerodynamic stability**: Critical for maintaining controlled flight in windy conditions
3. **Weight optimization**: Lighter rockets reach higher altitudes with the same motor
4. **Recovery system**: Must ensure safe landing (< 5 m/s impact velocity)
5. **Cost efficiency**: Lower cost improves overall score

## Motor Selection Analysis

First, I'll analyze the available motors to find one with appropriate total impulse for our target altitude:

| Motor | Total Impulse (Ns) | Avg Thrust (N) | Mass (kg) | Cost Factor |
|-------|-------------------|----------------|-----------|-------------|
| Pro75M1670 | 6023.6 | 1533.9 | 1.815 | Medium |
| AeroTechK700W | 2249 | 658.7 | 0.732 | Low |
| CesaroniM1670 | 6023.6 | 1533.9 | 3.101 | Medium |
| AeroTechH128W | 176.5 | 141.2 | 0.108 | Very Low |
| CesaroniO3700 | 29930.2 | 2836.9 | 14.194 | High |
| CesaroniO5800 | 30382.7 | 5040.2 | 12.418 | High |
| CesaroniK160 | 1521.7 | 190.2 | 0.7 | Low |

For a 3048m apogee, a medium-impulse motor like the Pro75M1670 or CesaroniM1670 should be sufficient. The O-class motors would likely cause significant overshoot and are more expensive. The H and K class motors might be underpowered.

Between Pro75M1670 and CesaroniM1670, the Pro75M1670 has the same impulse but lower mass, making it more efficient for our purposes.

## Rocket Body Design

For a medium-powered rocket:
- Body radius: Should be slightly larger than motor radius (75mm = 0.075m for Pro75M1670)
- Length: Approximately 1.0-1.2m for stability and component housing
- Material: Balsa wood or fiberglass offers good strength-to-weight ratio at reasonable cost

## Aerodynamic Considerations

- **Nose cone**: Ogive shape provides good aerodynamic performance
- **Fins**: 3-4 fins with moderate size for stability in wind
- **Center of Pressure (CP)**: Must be behind Center of Gravity (CG) by at least 1 caliber (1 body diameter)

## Recovery System

For a safe landing (< 5 m/s):
- Main parachute CD_S calculation: 
  - For a rocket mass of ~3-4 kg
  - Terminal velocity = √(2mg/ρACD)
  - For v < 5 m/s, CD_S ≈ 2.5-3.0 m²

## Wind Compensation

With 20 m/s easterly winds, I'll angle the launch rail slightly into the wind (westward) to compensate for drift:
- Launch inclination: 85-88 degrees (slightly off vertical)
- Heading: 270 degrees (west, into the wind)

## Final Design Configuration

Based on these calculations and considerations, here's my optimized rocket design:

```python
config = {
    "motor_choice": "Pro75M1670",
    "rocket_body": {
        "radius": 0.08,  # Body radius in meters (slightly larger than motor radius)
        "length": 1.1,   # Body length in meters
        "material": "fiberglass",
        "thickness": 0.003,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.25,  # Nose cone length in meters
            "material": "fiberglass",
        },
        "fins": {
            "number": 3,
            "root_chord": 0.12,  # Fin root chord in meters
            "tip_chord": 0.06,   # Fin tip chord in meters
            "span": 0.08,        # Fin span in meters
            "cant_angle": 0,     # Cant angle in degrees
            "material": "plywood",
            "thickness": 0.004   # Fin thickness in meters
        },
        "tail": {
            "length": 0.2,  # Tail length in meters
            "top_radius": 0.075,  # Top radius in meters
            "bottom_radius": 0.08,  # Bottom radius in meters
            "material": "fiberglass",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 2.8,  # Main parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.3,  # Drogue parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 1.5,  # Length of the launch rail in meters
        "inclination": 87,   # Rail inclination in degrees (slightly angled into wind)
        "heading": 270,      # Launch heading in degrees (west, into the wind)
    },
    "payload": {
        "mass": 0.3,  # Payload mass in kg
        "position": 0.4  # Payload position relative to rocket center in meters
    }
}
```

This design balances performance, stability, and cost-effectiveness to reach the target apogee while ensuring a safe landing and minimizing horizontal drift in the specified wind conditions.
Score: 74.92/100
Target Apogee: 3048.0m, Actual: 2447.52m, Error: 19.70%
Structural integrity: PASSED
Cost: $619.70


Based on previous attempts, please provide an improved rocket design that will reach the target apogee of 3048.0m.