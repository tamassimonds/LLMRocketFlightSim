# Rocket Design Task

## Design Requirements

- **Target Landing Position**: (3000.0m, 5000.0m) - land as close as possible to these coordinates
- **Wind Conditions**: 20 m/s from E direction

## You are scored off the following
Distance to max apogee
Cost: Cheaper the rocket the better the score
Does it land safely (less than 5 m/s)
Does it not break
Horz distance: How far is it from the intial launch site

#Score func code shown below:
structural_failure = None  # Whether the rocket structure failed during flight
structural_failure_reward = 0

if structural_failure is not None:
    if structural_failure:
        structural_failure_reward = 0
    else:
        # Structural failure did not occur
        structural_failure_reward = 1

# Calculate horizontal distance reward
# Lower horizontal distance from launch site is better
horz_distance = abs(horizontal_distance)  # Distance in meters from launch site
max_horz_distance = target_apogee * 0.3  # Maximum acceptable horizontal distance
horz_distance_reward = max(0, 1 - horz_distance / max_horz_distance)

# Calculate cost reward
# Lower cost designs receive higher rewards
cost = total_cost  # Total cost of rocket components
max_cost = 1000  # Maximum cost threshold
cost_reward = max(0, 1 - cost / max_cost)

# Calculate landing impact velocity reward
# Lower impact velocity (safer landing) is better
impact_velocity = abs(impact_velocity)  # Landing speed in m/s
max_impact_velocity = 50  # Maximum acceptable impact velocity
impact_reward = max(0, 1 - impact_velocity / max_impact_velocity)

percent_difference = abs(apogee - target_apogee) / target_apogee
distance_reward = 1.0 - percent_difference
distance_reward = max(0, distance_reward)


# Calculate total reward with component weights
reward = distance_reward + horz_distance_reward * 0.2 + cost_reward * 0.3 + impact_reward * 0.3 + structural_failure_reward * 0.2




## Available Materials

The following materials are available for the rocket components:
aluminum, composite, fiberglass, carbon_fiber, balsa_wood, plywood, ABS_plastic

## Available Motors

Name,Manufacturer,Radius (mm),Length (mm),Dry Mass (kg),Max Thrust (N),Avg Thrust (N),Burn Time (s),Total Impulse (Ns),Isp (s)
Pro75M1670,CTI,75,757,1.815,2200,1533.9,3.9,6023.6,198
AeroTechK700W,AT,54,568,0.732,1029.3,658.7,3.5,2249,177.5
CesaroniM1670,CTI,75,757,3.101,2200,1533.9,3.6,6023.6,198
AeroTechH128W,AT,29,194,0.108,190.5,141.2,1.29,176.5,191.3
CesaroniO3700,CTI,161,957,14.194,4030.3,2836.9,8.2,29930.2,177.8
CesaroniO5800,CTI,150,754,12.418,6395.5,5040.2,5.2,30382.7,222
CesaroniK160,CTI,54,404,0.7,272.2,190.2,9.7,1521.7,182.9

## Design Task

Based on the requirements and available components, design a rocket that will reach the target apogee. Your design should include:

1. Motor selection (choose from the available motors list)
2. Body dimensions and material
3. Nose cone dimensions and material
4. Fin design and material
5. Parachute specifications
6. Launch rail configuration


### Notes
DRC are run on the design so you need to make sure the design is feasible.
Here are some of the checks:
Notes for the tail the top and bottom radius cannot be the same (causes error)
The material must be specified exactly as listed above
The body radius must be greater than the motor radius
Nose cone but by exactly one of the listed 
Don't include any additional python code (other than config. Putting calculation in there is ok like 32/4 but not whole functions

## Response Format

Please provide your design as a Python dictionary that can be directly used in our simulation software. Use the following format:

```python
config = {
    "motor_choice": "MOTOR_NAME",  # Choose from available motors
    "rocket_body": {
        "radius": RADIUS_IN_METERS,  # Body radius in meters (must be greater than motor Radius)
        "length": LENGTH_IN_METERS,  # Body length in meters
        "material": "MATERIAL",  # Choose from available materials
        "thickness": THICKNESS_IN_METERS,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "SHAPE",  # "conical", "ogive", "elliptical", "tangent", "von karman", "parabolic", "powerseries" or "lvhaack".
            "length": LENGTH_IN_METERS,
            "material": "MATERIAL",
        },
        "fins": {
            "number": NUMBER_OF_FINS,
            "root_chord": LENGTH_IN_METERS,
            "tip_chord": LENGTH_IN_METERS,
            "span": LENGTH_IN_METERS,
            "cant_angle": ANGLE_IN_DEGREES,
            "material": "MATERIAL",
            "thickness": THICKNESS_IN_METERS,
        },
        "tail": {
            "length": LENGTH_IN_METERS,
            "top_radius": RADIUS_IN_METERS,
            "bottom_radius": RADIUS_IN_METERS,
            "material": "MATERIAL",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": LENGTH_IN_METERS, 
        "inclination": ANGLE_IN_DEGREES, #90 is vertical launch
        "heading": ANGLE_IN_DEGREES, # Heading in degrees 0 is up
    },
    "payload": { #point mass as position specified 
        "mass": MASS_IN_KG,
        "position": POSITION_IN_METERS,  # relative to rocket center
    },
}
```


Here's an example valid design. This is not at all indicative of what you should do just an example:

```python
config = {
    "motor_choice": "CesaroniO5800",
    "rocket_body": {
        "radius": 0.1,  # Body radius in meters
        "length": 1.2,    # Body length in meters
        "material": "fiberglass",
        "thickness": 0.01,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.3,  # Nose cone length in meters
            "material": "composite",
        },
        "fins": {
            "number": 4,
            "root_chord": 0.15,  # Fin root chord in meters
            "tip_chord": 0.075,  # Fin tip chord in meters
            "span": 0.3,         # Fin span in meters
            "cant_angle": 0.5,   # Cant angle in degrees
            "material": "carbon_fiber",
            "thickness": 0.005   # Fin thickness in meters
        },
        "tail": {
            "length": 1.2,  # Tail length in meters
            "top_radius": 0.04,  # Top radius in meters
            "bottom_radius": 0.05,  # Bottom radius in meters
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.25,  # Main parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,  # Drogue parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 1.2,  # Length of the launch rail in meters
        "inclination": 90,   # Rail inclination in degrees (vertical)
        "heading": 0,        # Launch heading in degrees (straight up)
    },
    "payload": {
        "mass": 0.5,  # Payload mass in kg
        "position": 0.6  # Payload position relative to rocket center in meters
    }
}
```
Before answering you should provide your full reasoning for the design choices you made thinking like a rocket scientist. Run sample calulations, make approximations etc to find best design



=== PREVIOUS ATTEMPTS ===

--- ATTEMPT 1 ---
Design:
To design a rocket that meets the specified requirements, we need to consider several key elements, including the motor choice, body dimensions, aerodynamic features (nose cone and fins), parachute specifications, and launch rail configuration. The goal is to strike a balance between reaching the target apogee (3000.0m, 5000.0m), landing safely, and minimizing cost while preventing structural failure.

### Step 1: Motor Selection

From the list of available motors, the **Cesaroni O5800** has the highest thrust but also comes with a higher cost. The **AeroTech K700W** provides sufficient thrust for a reasonable altitude while being relatively lightweight and cost-effective.

### Step 2: Rocket Body

To achieve a target apogee of around 3000m, we need a sturdy but light rocket. Based on the thrust-to-weight ratio calculations, I recommend:

- **Body Radius**: 0.1m (greater than the motor radius which is 0.075m)
- **Body Length**: 1.5m (to maintain structural integrity and enough volume for stability)
- **Material**: **fiberglass** (it's strong but lightweight)
- **Thickness**: 0.005m

### Step 3: Nose Cone Design

For aerodynamic efficiency, I recommend a conical nose cone:

- **Type**: Conical
- **Length**: 0.3m
- **Material**: fiberglass (to keep the weight down)

### Step 4: Fin Design

Stability during flight is crucial, and good fin design will help achieve it. I recommend:

- **Number of Fins**: 4 
- **Root Chord**: 0.15m
- **Tip Chord**: 0.075m
- **Span**: 0.3m
- **Cant Angle**: 0 degrees (for better stability)
- **Material**: carbon_fiber (strong and lightweight)
- **Thickness**: 0.005m

### Step 5: Parachute Specifications

For the parachute, a main and drogue parachute will help manage descent:

- **Main Parachute**:
    - **Name**: Main
    - **Cd_s**: 0.5 (a standard size for a rocket of this scale)
    - **Trigger**: apogee
    - **Sampling Rate**: 105
    - **Lag**: 1.5 seconds
    - **Noise**: (0, 8.3, 0.5)

- **Drogue Parachute**:
    - **Name**: Drogue
    - **Cd_s**: 0.3 (slightly smaller than the main parachute for initial descent)
    - **Trigger**: apogee
    - **Sampling Rate**: 105
    - **Lag**: 1.5 seconds
    - **Noise**: (0, 8.3, 0.5)

### Step 6: Launch Rail Configuration

For the launch rail:

- **Rail Length**: 3m (long enough for a stable launch)
- **Inclination**: 90 degrees (a vertical launch is ideal)
- **Heading**: 0 degrees (straight up)

### Step 7: Payload

Assuming a lightweight payload to ensure the rocket can reach the intended apogee:

- **Mass**: 0.5 kg (standard for small rockets)
- **Position**: 0.0 m (center)

### Final Design Configuration

Combining all of these elements together results in the following configuration:

```python
config = {
    "motor_choice": "AeroTechK700W",
    "rocket_body": {
        "radius": 0.1,  # Body radius in meters
        "length": 1.5,  # Body length in meters
        "material": "fiberglass",
        "thickness": 0.005,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "conical",
            "length": 0.3,  # Nose cone length in meters
            "material": "fiberglass",
        },
        "fins": {
            "number": 4,
            "root_chord": 0.15,  # Fin root chord in meters
            "tip_chord": 0.075,  # Fin tip chord in meters
            "span": 0.3,         # Fin span in meters
            "cant_angle": 0,     # Cant angle in degrees
            "material": "carbon_fiber",
            "thickness": 0.005,  # Fin thickness in meters
        },
        "tail": {
            "length": 0.4, # Tail length in meters
            "top_radius": 0.05,  # Top radius in meters
            "bottom_radius": 0.06,  # Bottom radius in meters
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.5,  # Main parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.3,  # Drogue parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 3.0,  # Length of the launch rail in meters
        "inclination": 90,   # Rail inclination in degrees (vertical)
        "heading": 0,        # Launch heading in degrees (straight up)
    },
    "payload": {
        "mass": 0.5,  # Payload mass in kg
        "position": 0.0  # Payload position relative to rocket center in meters
    }
}
```

### Conclusion

This configuration should allow us to proximately reach the desired 3000m apogee while accounting for wind conditions and ensuring a safe landing. The materials and designs selected prioritize a balance of weight, structural integrity, and cost.
Score: 0.00/100


Based on previous attempts, please provide an improved rocket design that will precisely land at the target coordinates (3000.0m, 5000.0m).