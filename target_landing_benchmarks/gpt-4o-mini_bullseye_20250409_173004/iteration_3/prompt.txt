# Rocket Design Task

## Design Requirements

- **Target Landing Position**: (3000.0m, 5000.0m) - land as close as possible to these coordinates
- **Wind Conditions**: 20 m/s from E direction

## You are scored off the following
Distance to max apogee
Cost: Cheaper the rocket the better the score
Does it land safely (less than 5 m/s)
Does it not break
Horz distance: How far is it from the intial launch site

#Score func code shown below:
structural_failure = None  # Whether the rocket structure failed during flight
structural_failure_reward = 0

if structural_failure is not None:
    if structural_failure:
        structural_failure_reward = 0
    else:
        # Structural failure did not occur
        structural_failure_reward = 1

# Calculate horizontal distance reward
# Lower horizontal distance from launch site is better
horz_distance = abs(horizontal_distance)  # Distance in meters from launch site
max_horz_distance = target_apogee * 0.3  # Maximum acceptable horizontal distance
horz_distance_reward = max(0, 1 - horz_distance / max_horz_distance)

# Calculate cost reward
# Lower cost designs receive higher rewards
cost = total_cost  # Total cost of rocket components
max_cost = 1000  # Maximum cost threshold
cost_reward = max(0, 1 - cost / max_cost)

# Calculate landing impact velocity reward
# Lower impact velocity (safer landing) is better
impact_velocity = abs(impact_velocity)  # Landing speed in m/s
max_impact_velocity = 50  # Maximum acceptable impact velocity
impact_reward = max(0, 1 - impact_velocity / max_impact_velocity)

percent_difference = abs(apogee - target_apogee) / target_apogee
distance_reward = 1.0 - percent_difference
distance_reward = max(0, distance_reward)


# Calculate total reward with component weights
reward = distance_reward + horz_distance_reward * 0.2 + cost_reward * 0.3 + impact_reward * 0.3 + structural_failure_reward * 0.2




## Available Materials

The following materials are available for the rocket components:
aluminum, composite, fiberglass, carbon_fiber, balsa_wood, plywood, ABS_plastic

## Available Motors

Name,Manufacturer,Radius (mm),Length (mm),Dry Mass (kg),Max Thrust (N),Avg Thrust (N),Burn Time (s),Total Impulse (Ns),Isp (s)
Pro75M1670,CTI,75,757,1.815,2200,1533.9,3.9,6023.6,198
AeroTechK700W,AT,54,568,0.732,1029.3,658.7,3.5,2249,177.5
CesaroniM1670,CTI,75,757,3.101,2200,1533.9,3.6,6023.6,198
AeroTechH128W,AT,29,194,0.108,190.5,141.2,1.29,176.5,191.3
CesaroniO3700,CTI,161,957,14.194,4030.3,2836.9,8.2,29930.2,177.8
CesaroniO5800,CTI,150,754,12.418,6395.5,5040.2,5.2,30382.7,222
CesaroniK160,CTI,54,404,0.7,272.2,190.2,9.7,1521.7,182.9

## Design Task

Based on the requirements and available components, design a rocket that will reach the target apogee. Your design should include:

1. Motor selection (choose from the available motors list)
2. Body dimensions and material
3. Nose cone dimensions and material
4. Fin design and material
5. Parachute specifications
6. Launch rail configuration


### Notes
DRC are run on the design so you need to make sure the design is feasible.
Here are some of the checks:
Notes for the tail the top and bottom radius cannot be the same (causes error)
The material must be specified exactly as listed above
The body radius must be greater than the motor radius
Nose cone but by exactly one of the listed 
Don't include any additional python code (other than config. Putting calculation in there is ok like 32/4 but not whole functions

## Response Format

Please provide your design as a Python dictionary that can be directly used in our simulation software. Use the following format:

```python
config = {
    "motor_choice": "MOTOR_NAME",  # Choose from available motors
    "rocket_body": {
        "radius": RADIUS_IN_METERS,  # Body radius in meters (must be greater than motor Radius)
        "length": LENGTH_IN_METERS,  # Body length in meters
        "material": "MATERIAL",  # Choose from available materials
        "thickness": THICKNESS_IN_METERS,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "SHAPE",  # "conical", "ogive", "elliptical", "tangent", "von karman", "parabolic", "powerseries" or "lvhaack".
            "length": LENGTH_IN_METERS,
            "material": "MATERIAL",
        },
        "fins": {
            "number": NUMBER_OF_FINS,
            "root_chord": LENGTH_IN_METERS,
            "tip_chord": LENGTH_IN_METERS,
            "span": LENGTH_IN_METERS,
            "cant_angle": ANGLE_IN_DEGREES,
            "material": "MATERIAL",
            "thickness": THICKNESS_IN_METERS,
        },
        "tail": {
            "length": LENGTH_IN_METERS,
            "top_radius": RADIUS_IN_METERS,
            "bottom_radius": RADIUS_IN_METERS,
            "material": "MATERIAL",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": AREA,
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": LENGTH_IN_METERS, 
        "inclination": ANGLE_IN_DEGREES, #90 is vertical launch
        "heading": ANGLE_IN_DEGREES, # Heading in degrees 0 is up
    },
    "payload": { #point mass as position specified 
        "mass": MASS_IN_KG,
        "position": POSITION_IN_METERS,  # relative to rocket center
    },
}
```


Here's an example valid design. This is not at all indicative of what you should do just an example:

```python
config = {
    "motor_choice": "CesaroniO5800",
    "rocket_body": {
        "radius": 0.1,  # Body radius in meters
        "length": 1.2,    # Body length in meters
        "material": "fiberglass",
        "thickness": 0.01,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.3,  # Nose cone length in meters
            "material": "composite",
        },
        "fins": {
            "number": 4,
            "root_chord": 0.15,  # Fin root chord in meters
            "tip_chord": 0.075,  # Fin tip chord in meters
            "span": 0.3,         # Fin span in meters
            "cant_angle": 0.5,   # Cant angle in degrees
            "material": "carbon_fiber",
            "thickness": 0.005   # Fin thickness in meters
        },
        "tail": {
            "length": 1.2,  # Tail length in meters
            "top_radius": 0.04,  # Top radius in meters
            "bottom_radius": 0.05,  # Bottom radius in meters
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.25,  # Main parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,  # Drogue parachute CD_s
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 1.2,  # Length of the launch rail in meters
        "inclination": 90,   # Rail inclination in degrees (vertical)
        "heading": 0,        # Launch heading in degrees (straight up)
    },
    "payload": {
        "mass": 0.5,  # Payload mass in kg
        "position": 0.6  # Payload position relative to rocket center in meters
    }
}
```
Before answering you should provide your full reasoning for the design choices you made thinking like a rocket scientist. Run sample calulations, make approximations etc to find best design



=== PREVIOUS ATTEMPTS ===

--- ATTEMPT 1 ---
Design:
To design a rocket optimized for the given requirements, let’s analyze the constraints and components available, along with the flight physics involved.

### Goals and Constraints
1. **Target Landing Position**: (3000.0 m, 5000.0 m)
2. **Wind Conditions**: 20 m/s from the East (which means the rocket will drift westward during descent).
3. **Landing Speed**: Must be less than 5 m/s.
4. **Structural Integrity**: The rocket must not suffer structural failure.
5. **Cost Efficiency**: The design should aim for a lower cost.

Given the expected wind conditions, we also have to take into account the lateral drift and plan accordingly.

### Selection of Motor
Choosing an appropriate motor is crucial for achieving the apogee while ensuring manageable costs and thrust. 

Based on the given motors:
- **CesaroniM1670** and **CesaroniO5800** provide the highest thrust. However, the **CesaroniO5800** would likely be overkill, resulting in a very high ascent speed and a risk of structural failure.
- **AeroTechK700W** or **CesaroniM1670** would be reasonable options with sufficient thrust to reach the target apogee.

After consideration, I will choose the **CesaroniM1670** motor for this design due to balancing thrust and controlled burn time.

### Body Dimensions and Material
Next, I chose the rocket body:
- **Radius**: To ensure stability and to accommodate the motor, I will choose a radius slightly larger than the motor radius.
  - Radius of motor (75 mm): Therefore, I’ll choose a body radius of **0.08 m**.
- **Length**: I will set a length of about **1.5 m** to maintain a stable center of gravity.
- **Material**: I prefer using **fiberglass** due to its strength-to-weight ratio and cost-efficiency.
- **Wall Thickness**: I will choose a thickness of **0.005 m** for the body.

### Nose Cone Design
For the nose cone, I will select an **ogive shape** due to its aerodynamic properties:
- **Length**: I will set this to **0.3 m**.
- **Material**: I will use **fiberglass** to keep the weight down.

### Fin Design
Fins will provide stability during flight. 
- **Number of Fins**: I’ll opt for **4 fins** to ensure good stability.
- **Fin Dimensions**: 
  - Root chord: **0.15 m**
  - Tip chord: **0.075 m**
  - Span: **0.3 m**
  - Cant angle: **0 degrees** (for a stable flight).
- **Material**: I will again choose **fiberglass** for its lightness and stability characteristics.
- **Thickness**: I’ll keep it consistent at **0.005 m**.

### Tail Design
The tail will have a specific design to ensure stability while not contributing considerably to the drag.
- **Length**: **0.3 m**
- **Top radius**: **0.065 m**
- **Bottom radius**: **0.075 m**
- **Material**: **fiberglass** for consistency.

### Parachute Specifications
Effective parachutes are necessary for controlled descent:
- **Main parachute** area: **0.25 m²** 
- **Drogue parachute** area: **0.15 m²**
Both will deploy at apogee for safety.

### Launch Rail Configuration
- **Rail length**: **2.5 m** for stability during the initial launch.
- **Inclination**: **90 degrees** for straight-up launch.
- **Heading**: **0 degrees** for initial vertical trajectory without wind adjustment initially.

### Payload
- **Mass**: I’ll specify a mass of **0.5 kg**.
- **Position**: I will center it at **0.5 m** from the center for balance.

### Final Configuration
Taking all these into account, the configuration can be summarized as follows:

```python
config = {
    "motor_choice": "CesaroniM1670",
    "rocket_body": {
        "radius": 0.08,  # Body radius in meters
        "length": 1.5,    # Body length in meters
        "material": "fiberglass",
        "thickness": 0.005,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.3,  # Nose cone length in meters
            "material": "fiberglass",
        },
        "fins": {
            "number": 4,
            "root_chord": 0.15,  # Fin root chord in meters
            "tip_chord": 0.075,  # Fin tip chord in meters
            "span": 0.3,         # Fin span in meters
            "cant_angle": 0,     # Cant angle in degrees
            "material": "fiberglass",
            "thickness": 0.005,  # Fin thickness in meters
        },
        "tail": {
            "length": 0.3,  # Tail length in meters
            "top_radius": 0.065,  # Top radius in meters
            "bottom_radius": 0.075,  # Bottom radius in meters
            "material": "fiberglass",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.25,  # Main parachute area
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.15,  # Drogue parachute area
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 2.5,  # Length of the launch rail in meters
        "inclination": 90,   # Rail inclination in degrees (vertical launch)
        "heading": 0,        # Launch heading in degrees (straight up)
    },
    "payload": {
        "mass": 0.5,  # Payload mass in kg
        "position": 0.5  # Payload position relative to rocket center in meters
    }
}
```

This design aims to achieve the target landing position while ensuring structural integrity, safety during descent, and cost efficiency. Adjustments can be made based on the actual simulation results for optimization.
Score: 23.81/100
Target Position: (3000.0m, 5000.0m), Landing Position: (-1911.71m, -0.00m), Error: 7008.91m
Structural integrity: PASSED
Cost: $743.53

--- ATTEMPT 2 ---
Design:
To improve the rocket design and enhance the likelihood of landing close to the target position (3000.0 m, 5000.0 m), we'll need to make adjustments considering the impact of wind, the vertical and horizontal components, apogee aiming, and descent control. Here’s the detailed reasoning process and revised design choices based on the previous attempt and required adjustments.

### Goals and Constraints
1. **Target Landing Position**: (3000.0 m, 5000.0 m) means accounting for a wind drift due to 20 m/s wind from the East.
2. **Wind Drift Adjustment**: The rocket will drift approximately with the wind during descent. We need to account for this in the initial launch trajectory.
3. **Landing Speed**: Must be lower than 5 m/s to land safely.
4. **Structural Integrity**: Ensure no failure during the flight.
5. **Cost**: Maintain a cost below the threshold while optimizing for performance.

### Design Approach

#### Motor Selection
Choosing the **CesaroniO5800** motor to maximize thrust while maintaining the descent phase control. Although it’s a heavier motor, we expect the sufficient thrust will help clear the 3000 m apogee easily and adjust better for wind drift control.

#### Body Dimensions and Material
- **Radius**: Selecting a body radius of **0.1 m** (greater than the motor radius of 0.075 m).
- **Length**: Set at **1.8 m** to provide better structural stability and room for components.
- **Material**: Choosing **carbon_fiber** due to its lightweight attributes and better strength properties compared to fiberglass.
- **Wall Thickness**: Fixed at **0.005 m** for structural reliability.

#### Nose Cone Design
We would maintain an **ogive shape** for the nose cone, as it is aerodynamically efficient:
- **Length**: Set to **0.4 m** to reduce drag further.
- **Material**: Using **carbon_fiber** to maintain consistency with the body.

#### Fin Design
Fins will aid stability with added control during the descent phase.
- **Number of Fins**: Increase to **5 fins** for better control of the rocket trajectory.
- **Fin Dimensions**: 
  - Root Chord: **0.18 m**
  - Tip Chord: **0.09 m**
  - Span: **0.35 m**
  - Cant Angle: Set at **5 degrees** for inducing a slight roll for wind compensation.
- **Material**: Retaining **carbon_fiber** for overall weight reduction and performance.
- **Thickness**: Maintain **0.005 m**.

#### Tail Design
The tail will enhance stability as well:
- **Length**: Keep it at **0.4 m**.
- **Top Radius**: **0.07 m**
- **Bottom Radius**: **0.09 m**
- **Material**: Use **carbon_fiber** to stay consistent.

#### Parachute Specifications
To ensure a controlled descent:
- **Main parachute**: Area set at **0.4 m²** for effective descent control.
- **Drogue parachute**: Reduce to **0.2 m²**.
- Deploy both at apogee to ensure a moderated descent.

#### Launch Rail Configuration
- **Rail Length**: **3.5 m** for increased stability during launch.
- **Inclination**: **85 degrees** to adjust against the wind.
- **Heading**: Set at **-45 degrees** to counteract the eastward wind drift.

### Payload Specifications
- **Mass**: Specify at **0.7 kg** to ensure enough momentum without excessive weight.
- **Position**: Center the payload at **0.5 m** to keep balance.

### Final Configuration Summary
The revised design can be codified as follows:

```python
config = {
    "motor_choice": "CesaroniO5800",
    "rocket_body": {
        "radius": 0.1,  # Body radius in meters
        "length": 1.8,   # Body length in meters
        "material": "carbon_fiber",
        "thickness": 0.005,  # Wall thickness in meters
    },
    "aerodynamics": {
        "nose_cone": {
            "kind": "ogive",
            "length": 0.4,  # Nose cone length in meters
            "material": "carbon_fiber",
        },
        "fins": {
            "number": 5,
            "root_chord": 0.18,  # Fin root chord in meters
            "tip_chord": 0.09,  # Fin tip chord in meters
            "span": 0.35,         # Fin span in meters
            "cant_angle": 5,      # Cant angle in degrees
            "material": "carbon_fiber",
            "thickness": 0.005,   # Fin thickness in meters
        },
        "tail": {
            "length": 0.4,  # Tail length in meters
            "top_radius": 0.07,  # Top radius in meters
            "bottom_radius": 0.09,  # Bottom radius in meters
            "material": "carbon_fiber",
        },
    },
    "parachutes": {
        "main": {
            "name": "Main",
            "cd_s": 0.4,  # Main parachute area
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
        "drogue": {
            "name": "Drogue",
            "cd_s": 0.2,  # Drogue parachute area
            "trigger": "apogee",
            "sampling_rate": 105,
            "lag": 1.5,
            "noise": (0, 8.3, 0.5),
        },
    },
    "launch": {
        "rail_length": 3.5,  # Length of the launch rail in meters
        "inclination": 85,    # Rail inclination in degrees
        "heading": -45,       # Launch heading in degrees (adjusted against wind)
    },
    "payload": {
        "mass": 0.7,  # Payload mass in kg
        "position": 0.5  # Payload position relative to rocket center in meters
    }
}
```

### Conclusion
This redesigned rocket configuration emphasizes better dynamics to contend with wind drift while ensuring safe landing speeds and structural integrity. With these adjustments, we expect a significant improvement in overall performance, better accuracy in landing position, and adherence to all design requirements.
Score: 22.50/100
Target Position: (3000.0m, 5000.0m), Landing Position: (-3832.09m, 826.44m), Error: 8006.00m
Structural integrity: PASSED
Cost: $2018.95


Based on previous attempts, please provide an improved rocket design that will precisely land at the target coordinates (3000.0m, 5000.0m).